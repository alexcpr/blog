<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nouvelles et mises √† jour | Alexandre's Blog</title>
  <link href="https://blog.alexandrecipor.com/feed.xml" rel="self"/>
  <link href="https://blog.alexandrecipor.com/"/>
  <updated>2018-09-08T15:16:29+02:00</updated>
  <id>https://blog.alexandrecipor.com/</id>
  <author>
    <name></name>
  </author>

  
  
  <entry>
    <title>Pourquoi w3schools est-il une mauvaise source d'information ?</title>
    <link href="https://blog.alexandrecipor.com/fr/why-is-w3schools-bad"/>
    <updated>2018-08-29T00:00:00+02:00</updated>
    <id>https://blog.alexandrecipor.com/fr/why-is-w3schools-bad</id>
    <content type="html">&lt;p&gt;En tant que d√©veloppeur, j‚Äôutilise &lt;a href=&quot;https://discordapp.com/&quot;&gt;Discord&lt;/a&gt; tous les jours pour discuter avec des personnes et des amis au sujet de la programmation et je suis principalement dans des serveurs Discord en rapport √† la programmation. J‚Äôai surtout √©t√© dans un serveur Discord en particulier pendant quelques jours, serveur rassemblant environ 25.000 membres, et j‚Äôai pu apercevoir des personnes partager des liens menants vers des tutoriels du site &lt;a href=&quot;https://www.w3schools.com/&quot;&gt;w3schools&lt;/a&gt;, site qui est une mauvaise source d‚Äôinformation pour apprendre √† programmer. J‚Äôai donc d√©cid√© d‚Äôalerter un administrateur pour qu‚Äôil fasse quelque chose √† ce sujet et il m‚Äôavait r√©pondu que les tutoriels provenant du site w3schools sont parfois d√©suets et que cela n‚Äôest pas un gros probl√®me en soi. Cependant, il est clair que c‚Äôest un gros probl√®me parce que, en tant que d√©butant, quand on apprend quelque chose et qu‚Äôon le fait tout le temps, il est difficile d‚Äôarr√™ter de le faire et encore plus si personne ne vous en avertit. Avec tout ce que nous savons sur les meilleures pratiques de d√©veloppement web, la capacit√© de w3schools √† rester connu nous d√©concerte tous.&lt;/p&gt;

&lt;p&gt;Je ne suis pas le premier √† dire que w3schools est mauvais ni le dernier √† √©crire sur le sujet (&lt;a href=&quot;https://web.archive.org/web/20110412103745/http://w3fools.com&quot;&gt;cela a d√©j√† √©t√© fait dans le pass√©&lt;/a&gt;). Le probl√®me est que maintenant, ceux qui conseillent l‚Äôutilisation de w3schools commencent √† dire que ce site a r√©solu leurs probl√®mes. Et bien je vais vous montrer qu‚Äôil ne les a pas tous r√©solus.&lt;/p&gt;

&lt;h2 id=&quot;exemple-de-mauvaises-pratiques-que-w3schools-vous-fait-apprendre&quot;&gt;Exemple de mauvaises pratiques que w3schools vous fait apprendre&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;HTML
    &lt;ul&gt;
      &lt;li&gt;Vous ne me croirez probablement pas, mais oui, w3schools recommande aux gens d‚Äôutiliser Notepad pour les utilisateurs de Windows et TextEdit pour les utilisateurs de Mac.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;¬´ Les pages Web peuvent √™tre cr√©√©es et modifi√©es √† l‚Äôaide d‚Äô√©diteurs HTML professionnels.&lt;/p&gt;

    &lt;p&gt;Cependant, pour apprendre le HTML, nous recommandons un √©diteur de texte simple comme Notepad (PC) ou TextEdit (Mac).&lt;/p&gt;

    &lt;p&gt;Nous croyons que l‚Äôutilisation d‚Äôun simple √©diteur de texte est une bonne fa√ßon d‚Äôapprendre le HTML.&lt;/p&gt;

    &lt;p&gt;Suivez les quatre √©tapes ci-dessous pour cr√©er votre premi√®re page Web avec Notepad ou TextEdit. ¬ª&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://www.w3schools.com/html/html_editors.asp&quot;&gt;Voyez par vous-m√™me&lt;/a&gt;
  &lt;em&gt;Qu‚Äôest-ce que les utilisateurs de Linux devraient utiliser alors ?&lt;/em&gt; ü§î&lt;/p&gt;

    &lt;p&gt;Je recommande personnellement &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt; ou &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt; pour un √©diteur de code simple. Pour un IDE, je recommande les &lt;a href=&quot;https://www.jetbrains.com/&quot;&gt;outils Jetbrains&lt;/a&gt;.&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/html/html_formatting.asp&quot;&gt;tutoriel de formatage HTML&lt;/a&gt;, ils recommandent l‚Äôutilisation de la balise &lt;code&gt;&amp;#x3C;b&amp;#x3E;&lt;/code&gt; qui est maintenant obsol√®te et devrait √™tre remplac√©e par du CSS.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/html/html_basic.asp&quot;&gt;tutoriel sur les bases du HTML&lt;/a&gt;, ils utilisent les attributs &lt;code&gt;width&lt;/code&gt; et &lt;code&gt;height&lt;/code&gt; dans une balise &lt;code&gt;&amp;#x3C;img&amp;#x3E;&lt;/code&gt; au lieu d‚Äôutiliser du CSS. A peine mieux ici, ils inline du style dans la balise &lt;code&gt;&amp;#x3C;img&amp;#x3E;&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/html/html_headings.asp&quot;&gt;tutoriel sur les √©l√©ments de titre HTML&lt;/a&gt;, ils utilisent l‚Äôattribut &lt;code&gt;style&lt;/code&gt; dans une balise &lt;code&gt;&amp;#x3C;h1&amp;#x3E;&lt;/code&gt;. M√™me dans leurs tutoriels ‚Äú&lt;a href=&quot;https://www.w3schools.com/html/html_styles.asp&quot;&gt;style HTML&lt;/a&gt;‚Äù et ‚Äú&lt;a href=&quot;https://www.w3schools.com/html/html_css.asp&quot;&gt;HTML CSS&lt;/a&gt;‚Äù ils le font.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/html/html_links.asp&quot;&gt;tutoriel des liens HTML&lt;/a&gt; montrant comment changer les couleurs par d√©faut de la balise &lt;code&gt;&amp;#x3C;a&amp;#x3E;&lt;/code&gt;, ils ont fait ceci&lt;/li&gt;
    &lt;/ul&gt;
    &lt;pre&gt;&lt;code&gt;&amp;#x3C;style&amp;#x3E;
  a:link {
      color: green;
      background-color: transparent;
      text-decoration: none;
  }
  a:visited {
      color: pink;
      background-color: transparent;
      text-decoration: none;
  }
  a:hover {
      color: red;
      background-color: transparent;
      text-decoration: underline;
  }
  a:active {
      color: yellow;
      background-color: transparent;
      text-decoration: underline;
  }
&amp;#x3C;/style&amp;#x3E;
  &lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;&lt;em&gt;Notez que cette fois-ci ils ont utilis√© une balise &lt;code&gt;&amp;#x3C;style&amp;#x3E;&lt;/code&gt; !&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;Bien qu‚Äôils auraient pu le faire comme √ßa&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;&amp;#x3C;style&amp;#x3E;
  a {
      text-decoration: none;
      background-color: transparent
  }
  a:link {
      color: green
  }
  a:visited {
      color: pink
  }
  a:active,
  a:hover {
      color: red;
      text-decoration: underline
  }
  a:active {
      color: #ff0
  }
&amp;#x3C;/style&amp;#x3E;
  &lt;/code&gt;&lt;/pre&gt;
    &lt;ul&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/html/html_layout.asp&quot;&gt;tutoriel de mise en page HTML&lt;/a&gt;, ils recommandent l‚Äôutilisation de &lt;code&gt;float&lt;/code&gt; au lieu de &lt;code&gt;flex&lt;/code&gt;, ne parlent m√™me pas de &lt;code&gt;grid&lt;/code&gt; et, comme excuse, disent que &lt;code&gt;flex&lt;/code&gt; n‚Äôest pas support√© par IE10 et moins. 
  &lt;img src=&quot;/images/ie11-desktop.png&quot; alt=&quot;&quot; /&gt;
  &lt;img src=&quot;/images/ie11-mobile.png&quot; alt=&quot;&quot; /&gt;
  IE 11 Desktop fonctionne bien, mais pas la version mobile. Flex fonctionne partiellement sur IE 11 comme le dit &lt;a href=&quot;https://caniuse.com/#search=flex&quot;&gt;caniuse&lt;/a&gt;. Cependant, ce n‚Äôest pas un vrai probl√®me puisque IE ne repr√©sente que 2% de l‚Äôutilisation des navigateurs environ.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/html/html_responsive.asp&quot;&gt;tutoriel sur le design Responsive&lt;/a&gt;, ils utilisent l‚Äôattribut &lt;code&gt;&amp;#x3C;media&amp;#x3E;&lt;/code&gt; pour afficher diff√©rents contenus en fonction de la largeur du navigateur. Ne faites pas cela, utilisez plut√¥t les media queries dans un fichier CSS s√©par√©.&lt;/li&gt;
      &lt;li&gt;Ils ont un &lt;a href=&quot;https://www.w3schools.com/html/html_xhtml.asp&quot;&gt;tutoriel sur le XHTML&lt;/a&gt; qui est mort depuis HTML5.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CSS
    &lt;ul&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/css/css3_mediaqueries.asp&quot;&gt;tutoriel CSS Media Queries&lt;/a&gt; et, ils utilisent l‚Äôattribut &lt;code&gt;&amp;#x3C;media&amp;#x3E;&lt;/code&gt; pour afficher diff√©rents contenus en fonction de la largeur du navigateur. Ne faites pas cela, utilisez plut√¥t les media queries dans un fichier CSS s√©par√©.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JavaScript
    &lt;ul&gt;
      &lt;li&gt;Dans tous leurs tutoriels, y compris leur &lt;a href=&quot;https://www.w3schools.com/js/js_variables.asp&quot;&gt;tutoriel sur les variables JavaScript&lt;/a&gt; et ‚Äú&lt;a href=&quot;https://www.w3schools.com/js/js_best_practices.asp&quot;&gt;Meilleures pratiques JavaScript&lt;/a&gt;‚Äù, ils utilisent &lt;code&gt;var&lt;/code&gt; bien qu‚Äôaujourd‚Äôhui vous devriez utiliser &lt;code&gt;let&lt;/code&gt; ou &lt;code&gt;const&lt;/code&gt;. Dans ES2015, &lt;code&gt;let&lt;/code&gt; et &lt;code&gt;const&lt;/code&gt; ont √©t√© ajout√©s et sont support√©s par IE11 (IE11 repr√©sente presque 100% de l‚Äôutilisation actuelle d‚ÄôIE). Vous pouvez √©crire en ES2015 et convertir votre code en ES5 avec des outils tels que &lt;a href=&quot;https://babeljs.io/&quot;&gt;babel&lt;/a&gt;. &lt;em&gt;Et pour √™tre honn√™te, de nos jours, vous pouvez d√©velopper en ES2015, car IE ne repr√©sente que 2% de l‚Äôutilisation des navigateurs environ.&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;Dans tous leurs tutoriels, ils font de la concat√©nation bien qu‚Äôils puissent faire de l‚Äôinterpolation, ce qui est tr√®s facile en utilisant des mod√®les litt√©raux.&lt;/li&gt;
      &lt;li&gt;Dans tous leurs tutoriels o√π ils comparent des variables, ils utilisent &lt;code&gt;==&lt;/code&gt; et &lt;code&gt;!=&lt;/code&gt; au lieu d‚Äôutiliser &lt;code&gt;===&lt;/code&gt; et &lt;code&gt;!==&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Dans tous leurs tutoriels, ils montrent le plus souvent des fonctions traditionnelles au lieu de fonctions fl√©ch√©es, m√™me lorsque cela a plus de sens.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/tryit.asp?filename=tryjs_intro_lightbulb&quot;&gt;introduction √† JavaScript&lt;/a&gt;, ils montrent comment JavaScript peut modifier les valeurs des attributs HTML. Le probl√®me est qu‚Äôils inline le code JavaScript √† l‚Äôint√©rieur d‚Äôun attribut &lt;code&gt;onclick&lt;/code&gt;, ce qui est une mauvaise pratique, car ce n‚Äôest pas tr√®s lisible et c‚Äôest au m√™me niveau qu‚Äôinline du CSS. Ils auraient d√ª utiliser une balise &lt;code&gt;&amp;#x3C;script&amp;#x3E;&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_whereto.asp&quot;&gt;tutoriel JavaScript Where To&lt;/a&gt;, ils ne mentionnent pas que lorsqu‚Äôon place du code JavaScript dans la balise &lt;code&gt;&amp;#x3C;head&amp;#x3E;&lt;/code&gt;, vous devez utiliser l‚Äôattribut &lt;code&gt;defer&lt;/code&gt; ou &lt;code&gt;async&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_output.asp&quot;&gt;tutoriel JavaScript Output&lt;/a&gt;, m√™me s‚Äôils ont averti que &lt;code&gt;document.write&lt;/code&gt; ne devrait √™tre utilis√© que pour le d√©bogage, honn√™tement, cela ne devrait m√™me pas √™tre mentionn√©.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_variables.asp&quot;&gt;tutoriel sur les variables JavaScript&lt;/a&gt;, il y a plusieurs exemples de rapports de plusieurs variables sur une m√™me ligne sans assignation.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_operators.asp&quot;&gt;tutoriel sur les op√©rateurs JavaScript&lt;/a&gt;, ils ne mentionnent pas l‚Äôop√©rateur &lt;code&gt;**&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_datatypes.asp&quot;&gt;tutoriel sur les types de donn√©es JavaScript&lt;/a&gt;, ils disent : ‚ÄúVous pouvez consid√©rer que c‚Äôest un bug dans JavaScript que le type de null est un objet. Il devrait √™tre null.‚Äù C‚Äô√©tait un bug au d√©but, mais ce texte pourrait faire penser, √† tort, que ce comportement changera un jour.&lt;/li&gt;
      &lt;li&gt;Pas de tutoriel/documentation sur l‚ÄôAPI &lt;code&gt;fetch&lt;/code&gt; moderne seulement sur &lt;a href=&quot;https://www.w3schools.com/js/js_ajax_intro.asp&quot;&gt;XMLHttpRequest&lt;/a&gt;. &lt;em&gt;&lt;a href=&quot;https://blog.alexandrecipor.com/fr/fetch-api&quot;&gt;Voyez pourquoi vous devriez utiliser fetch et non XMLHttp&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_objects.asp&quot;&gt;tutoriel sur les objets en JavaScript&lt;/a&gt;, ils auraient pu utiliser la syntaxe courte pour des cr√©er une m√©thode dans un objet comme ceci&lt;/li&gt;
    &lt;/ul&gt;
    &lt;pre&gt;&lt;code class=&quot;json&quot;&gt;{
  firstName: &amp;#x22;John&amp;#x22;,
  lastName : &amp;#x22;Doe&amp;#x22;,
  id       : 1,
  method() {
      // code de la m&amp;#xE9;thode ici
  }
}&lt;/code&gt;&lt;/pre&gt;
    &lt;ul&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_events.asp&quot;&gt;tutoriel sur les √©v√©nements JavaScript&lt;/a&gt;, ils enseignent une mauvaise pratique consistant √† utiliser des √©v√©nements HTML au lieu d‚Äôutiliser des √©v√©nements JavaScript avec la m√©thode &lt;code&gt;addEventListener&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_arrays.asp&quot;&gt;tutoriel sur les tableaux en JavaScript&lt;/a&gt;, ils auraient pu enseigner comment it√©rer sur un tableau comme ceci &lt;code&gt;for (const element of array) { ... }&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_hoisting.asp&quot;&gt;tutoriel JavaScript Hoisting&lt;/a&gt;, il serait beaucoup plus facile d‚Äôutiliser &lt;code&gt;let&lt;/code&gt; et &lt;code&gt;const&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_best_practices.asp&quot;&gt;tutoriel sur les meilleures pratiques en JavaScript&lt;/a&gt; les d√©clarations en haut sont maintenant une mauvaise pratique, &lt;code&gt;let&lt;/code&gt; et &lt;code&gt;const&lt;/code&gt; devraient √™tre utilis√©s √† la place. Utiliser les param√®tres par d√©faut fait maintenant partie de la syntaxe.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/js/js_validation.asp&quot;&gt;tutoriel de validation JavaScript&lt;/a&gt;, &lt;code&gt;addEventListener&lt;/code&gt; devrait, encore une fois, √™tre utilis√©.&lt;/li&gt;
      &lt;li&gt;Les classes JavaScript ne sont pas mentionn√©es.&lt;/li&gt;
      &lt;li&gt;Les promesses JavaScript ne sont pas mentionn√©es.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;PHP
    &lt;ul&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/php/default.asp&quot;&gt;introduction √† PHP&lt;/a&gt;, PHP5 est suffisant pour montrer √† quel point le tutoriel est d√©pass√©.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/php/php_install.asp&quot;&gt;tutoriel d‚Äôinstallation de PHP5&lt;/a&gt;, il n‚Äôy a pas vraiment d‚Äôexplications sur la fa√ßon d‚Äôinstaller PHP, c‚Äôest comme dire ‚ÄúRegardez la doc et d√©merdez-vous avec elle, nous ne vous parlerons pas de php -S (serveur web interne php pour le d√©veloppement)‚Äù.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/php/php_variables.asp&quot;&gt;tutoriel sur les variables en PHP&lt;/a&gt;, ils utilisent &lt;code&gt;&quot;&lt;/code&gt; par d√©faut au lieu de &lt;code&gt;'&lt;/code&gt; m√™me sans interpolation. Ils utilisent des variables globales, ce qui est √©galement une mauvaise pratique.&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/php/php_arrays.asp&quot;&gt;tutoriel sur les tableaux en PHP&lt;/a&gt;, ils utilisent l‚Äôancienne syntaxe longue &lt;code&gt;array()&lt;/code&gt; bien qu‚Äôils devraient utiliser la syntaxe courte &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/php/php_ajax_intro.asp&quot;&gt;tutoriel AJAX en PHP&lt;/a&gt;, leurs codes JavaScript et PHP sont pleins de mauvaises pratiques et ils ne parlent m√™me pas du fait que, de nos jours, vous devriez utiliser l‚ÄôAPI &lt;code&gt;fetch&lt;/code&gt; √† la place d‚ÄôAJAX. &lt;em&gt;&lt;a href=&quot;https://blog.alexandrecipor.com/fr/fetch-api&quot;&gt;Voyez pourquoi vous devriez utiliser fetch et non XMLHttp.&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;Pas de tutoriel sur le hachage des mots de passe.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Bootstrap
    &lt;ul&gt;
      &lt;li&gt;Dans leur &lt;a href=&quot;https://www.w3schools.com/bootstrap/default.asp&quot;&gt;introduction a Bootstrap&lt;/a&gt;, ils utilisent Bootstrap 3, pas besoin d‚Äôaller plus loin.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;W3.JS
    &lt;ul&gt;
      &lt;li&gt;Leur biblioth√®que &lt;a href=&quot;https://www.w3schools.com/w3js/default.asp&quot;&gt;W3.JS&lt;/a&gt; est lourde (12Ko) et ne fait pas beaucoup de choses. W3.JS est comme jQuery, lourd et inutile de nos jours, c‚Äôest pourquoi je ne recommande pas d‚Äôutiliser ces deux biblioth√®ques. En 2018, une biblioth√®que qui permet d‚Äôinteragir directement avec le DOM est assez anti-mod√®le maintenant qu‚Äôil existe des biblioth√®ques UX comme React ou VueJS.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pourquoi-le-site-w3schools-est-il-lui-m√™me-mauvais-&quot;&gt;Pourquoi le site w3schools est-il lui-m√™me mauvais ?&lt;/h2&gt;

&lt;p&gt;Pour cette partie, je vous recommande de lire &lt;a href=&quot;https://www.impressivewebs.com/w3schools-ugly-bad-good/&quot;&gt;cet article&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;fait-amusant&quot;&gt;Fait amusant&lt;/h2&gt;

&lt;p&gt;Je me balader sur le &lt;a href=&quot;http://w3schools.invisionzone.com/&quot;&gt;forum de w3schools&lt;/a&gt; et j‚Äôai trouv√© ce &lt;a href=&quot;http://w3schools.invisionzone.com/topic/57507-cloned-domain-from-w3schools/&quot;&gt;topic&lt;/a&gt; disant que quelqu‚Äôun a clon√© le site de w3schools. La version clon√©e est disponible &lt;a href=&quot;https://www.quanzhanketang.com/&quot;&gt;ici&lt;/a&gt; c‚Äôest une version ancienne du site de w3schools, donc vous pouvez explorer les tutoriels encore plus d√©pass√©s, vous pouvez aussi voir ce meme par vous-m√™me&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/w3fools.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ils utilisaient des tableaux HTML pour la mise en page et d‚Äôailleurs ce n‚Äôest pas une lampe üòÇ
Et je suis s√ªr que vous pouvez trouver encore des choses dr√¥les qu‚Äôils faisaient il y a quelques ann√©es.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; Si j‚Äôai oubli√© quelque chose, vous pouvez &lt;a href=&quot;https://help.github.com/articles/creating-an-issue/&quot;&gt;ouvrir une issue&lt;/a&gt; sur le &lt;a href=&quot;https://github.com/alexcpr/blog&quot;&gt;d√©p√¥t GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; w3schools ‚Üíüóë, utilisez plut√¥t &lt;a href=&quot;https://developer.mozilla.org/en-US/&quot;&gt;le MDN&lt;/a&gt; üï∂&lt;/p&gt;
</content>
  </entry>
  
  
  
  
  
  <entry>
    <title>Cesser d'utiliser XMLHttpRequest et passer √† fetch</title>
    <link href="https://blog.alexandrecipor.com/fr/fetch-api"/>
    <updated>2018-08-10T00:00:00+02:00</updated>
    <id>https://blog.alexandrecipor.com/fr/fetch-api</id>
    <content type="html">&lt;p&gt;L‚ÄôAPI XHR la plus populaire est &lt;code&gt;XMLHttpRequest&lt;/code&gt; qui n‚Äôa pas vraiment √©t√© faite pour ce pour quoi nous l‚Äôutilisons. C‚Äôest pourquoi l‚ÄôAPI &lt;code&gt;fetch&lt;/code&gt; a √©t√© cr√©√©e, l‚ÄôAPI &lt;code&gt;fetch&lt;/code&gt; est en quelque sorte un remplacement moderne pour &lt;code&gt;XMLHttpRequest&lt;/code&gt;. Jetons un coup d‚Äôoeil √† cette m√©thode &lt;code&gt;window.fetch&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;compatibilit√©-des-navigateurs&quot;&gt;Compatibilit√© des navigateurs&lt;/h2&gt;

&lt;p&gt;Une chose importante lors du d√©veloppement d‚Äôune application web est la compatibilit√© du navigateur avec les technologies utilis√©es. Comme &lt;code&gt;XMLHttpRequest&lt;/code&gt; est plus ancien, il a logiquement une meilleure compatibilit√© avec les navigateurs plus anciens par rapport √† &lt;code&gt;fetch&lt;/code&gt;, cependant, il y a des polyfill‚Äôs bien faits qui rendent cette API moderne compatible avec les navigateurs plus anciens tels que IE, etc‚Ä¶&lt;/p&gt;

&lt;p&gt;(c.f &lt;a href=&quot;https://caniuse.com/#search=XMLHttpRequest&quot;&gt;Compatibilit√© XMLHttpRequesty&lt;/a&gt;, &lt;a href=&quot;https://caniuse.com/#search=Fetch&quot;&gt;Compatibilit√© Fetch&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;utilisation-de-base-de-xmlhttprequest&quot;&gt;Utilisation de base de &lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;XHR est un peu trop compliqu√© √† mon avis et je ne comprends toujours pas pourquoi &lt;code&gt;XML&lt;/code&gt; est en majuscules alors que &lt;code&gt;Http&lt;/code&gt; est en camel-case, cela n‚Äôa aucun sens. Quoi qu‚Äôil en soit, voici un usage courant de l‚ÄôAPI XHR&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;if (window.XMLHttpRequest) { // Mozilla, Safari, etc...
    request = new XMLHttpRequest();
} else if (window.ActiveXObject) { // IE
    try {
        request = new ActiveXObject(&amp;#x27;Msxml2.XMLHTTP&amp;#x27;);
    } 
    catch (e) {
        try {
            request = new ActiveXObject(&amp;#x27;Microsoft.XMLHTTP&amp;#x27;);
        } 
        catch (e) {}
    }
}

// Ouvre la demande et l&amp;#x27;envoie
request.open(&amp;#x27;GET&amp;#x27;, &amp;#x27;https://exemple.com/api&amp;#x27;, true);
request.send(null);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bien s√ªr, les frameworks JavaScript rendent l‚ÄôAPI XHR plus agr√©able √† utiliser, mais ce que vous voyez ci-dessus est un exemple ‚Äú&lt;strong&gt;simple&lt;/strong&gt;‚Äù de l‚Äôutilisation la plus basique de XHR. XHR est un vrai g√¢chis.&lt;/p&gt;

&lt;h2 id=&quot;utilisation-de-base-de-fetch&quot;&gt;Utilisation de base de &lt;code&gt;fetch&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;L‚ÄôAPI &lt;code&gt;fetch&lt;/code&gt; est fournie dans l‚Äôobjet &lt;code&gt;window&lt;/code&gt; globale, le premier argument √©tant l‚ÄôURL (obligatoire) et le second les options (facultatif).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// fetch(url, options) | url: obligatoire - options: facultatif
fetch(&amp;#x27;https://exemple.com/api&amp;#x27;, {
    method: &amp;#x27;get&amp;#x27;
}).then(function(response) {
    // Succ&amp;#xE8;s :)
}).catch(function(err) {
    // Erreur :(
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et comme vous pouvez le voir, &lt;code&gt;fetch&lt;/code&gt; utilise les promesses Javascript pour g√©rer les r√©sultats et les callbacks. Si vous n‚Äô√™tes pas encore habitu√© aux promesses Javascript, habituez-vous - elles seront bient√¥t partout.&lt;/p&gt;

&lt;h2 id=&quot;en-t√™tes-de-requ√™te&quot;&gt;En-t√™tes de requ√™te&lt;/h2&gt;

&lt;p&gt;La possibilit√© de d√©finir des en-t√™tes de requ√™te est importante dans la flexibilit√© de la requ√™te, vous pouvez travailler avec les en-t√™tes de requ√™te en ex√©cutant &lt;code&gt;new Headers()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// Cr&amp;#xE9;er une instance d&amp;#x27;en-t&amp;#xEA;tes vide
const headers = new Headers();

// Ajouter des en-t&amp;#xEA;tes
headers.append(&amp;#x27;EnTeteCustom&amp;#x27;, &amp;#x27;MaSuperValeur&amp;#x27;);
headers.append(&amp;#x27;Content-Type&amp;#x27;, &amp;#x27;text/html&amp;#x27;);

// V&amp;#xE9;rifier si cet en-t&amp;#xEA;te est pr&amp;#xE9;sent
headers.has(&amp;#x27;Content-Type&amp;#x27;); // vrai
headers.has(&amp;#x27;Some-Header&amp;#x27;); // faux

// Obtenir la valeur d&amp;#x27;un en-t&amp;#xEA;te sp&amp;#xE9;cifique
headers.get(&amp;#x27;EnTeteCustom&amp;#x27;); // MaSuperValeur

// D&amp;#xE9;finir une nouvelle valeur pour un en-t&amp;#xEA;te existant
headers.set(&amp;#x27;Content-Type&amp;#x27;, &amp;#x27;text/plain&amp;#x27;);

// Supprimer une en-t&amp;#xEA;te
headers.delete(&amp;#x27;EnTeteCustom&amp;#x27;);

// Additionner les valeurs initiales
const headers = new Headers({
    &amp;#x27;Content-Type&amp;#x27;: &amp;#x27;application/json&amp;#x27;,
    &amp;#x27;User-Agent&amp;#x27;: &amp;#x27;MonSuperUserAgent&amp;#x27;
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pour utiliser les en-t√™tes de Request, vous devez d‚Äôabord cr√©er une nouvelle instance de &lt;code&gt;Request&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;const request = new Request(&amp;#x27;https://exemple.com/api&amp;#x27;, {
    headers: new Headers({
        &amp;#x27;Content-Type&amp;#x27;: &amp;#x27;application/json&amp;#x27;,
        &amp;#x27;User-Agent&amp;#x27;: &amp;#x27;MonSuperUserAgent&amp;#x27;
    })
});

fetch(request).then(function(response) {
    // traiter la r&amp;#xE9;ponse
}).catch(function(error) {
    // traiter l&amp;#x27;erreur
});&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;requ√™te&quot;&gt;Requ√™te&lt;/h2&gt;

&lt;p&gt;Une instance de &lt;code&gt;Request&lt;/code&gt; repr√©sente l‚Äô√©l√©ment de requ√™te d‚Äôun appel de la m√©thode &lt;code&gt;fetch&lt;/code&gt;. En passant une &lt;code&gt;Request&lt;/code&gt; √† l‚ÄôAPI fetch, vous pouvez faire des demandes avanc√©es et personnalis√©es:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;method&lt;/code&gt; - &lt;strong&gt;GET&lt;/strong&gt;, &lt;strong&gt;HEAD&lt;/strong&gt;, &lt;strong&gt;POST&lt;/strong&gt;, &lt;strong&gt;PUT&lt;/strong&gt;, &lt;strong&gt;DELETE&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;url&lt;/code&gt; - &lt;strong&gt;URL&lt;/strong&gt; de la requ√™te&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;headers&lt;/code&gt; - objet &lt;strong&gt;Headers&lt;/strong&gt; associ√©&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;referrer&lt;/code&gt; - r√©f√©rant de la requ√™te&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;mode&lt;/code&gt; - &lt;strong&gt;cors&lt;/strong&gt;, &lt;strong&gt;no-cors&lt;/strong&gt;, &lt;strong&gt;same-origin&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;credentials&lt;/code&gt; - les cookies doivent-ils accompagner la demande ? &lt;strong&gt;omit&lt;/strong&gt;, &lt;strong&gt;same-origin&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;redirect&lt;/code&gt; - &lt;strong&gt;follow&lt;/strong&gt;, &lt;strong&gt;error&lt;/strong&gt;, &lt;strong&gt;manual&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;integrity&lt;/code&gt; - valeur d‚Äôint√©grit√© des sous-ressources&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;cache&lt;/code&gt; - mode du cache (&lt;strong&gt;default&lt;/strong&gt;, &lt;strong&gt;reload&lt;/strong&gt;, &lt;strong&gt;no-cache&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voici un exemple d‚Äôutilisation de &lt;code&gt;Request&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// Construire la requ&amp;#xEA;te
const request = new Request(&amp;#x27;https://exemple.com/anything&amp;#x27;, {
    method: &amp;#x27;HEAD&amp;#x27;, 
    mode: &amp;#x27;no-cors&amp;#x27;, 
    redirect: &amp;#x27;follow&amp;#x27;,
    headers: new Headers({
        &amp;#x27;Content-Type&amp;#x27;: &amp;#x27;text/html&amp;#x27;
    })
});

// Et maintenant, utilisez la requ&amp;#xEA;te
fetch(request).then(function() {
    // handle response 
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seul le premier param√®tre, l‚ÄôURL, est requis. Chaque propri√©t√© ne peut √™tre que lu d√®s que l‚Äôinstance de la &lt;code&gt;Request&lt;/code&gt; a √©t√© cr√©√©e. Il est √©galement important de noter que &lt;code&gt;Request&lt;/code&gt; a une m√©thode de clonage qui est importante lors de l‚Äôutilisation de &lt;code&gt;fetch&lt;/code&gt; dans l‚ÄôAPI Service Worker - une &lt;code&gt;Request&lt;/code&gt; est un flux et doit donc √™tre clon√©e lors du passage √† un autre appel de &lt;code&gt;fetch&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;fetch(&amp;#x27;https://exemple.com/anything&amp;#x27;, {
    method: &amp;#x27;HEAD&amp;#x27;, 
    mode: &amp;#x27;no-cors&amp;#x27;, 
    redirect: &amp;#x27;follow&amp;#x27;,
    headers: new Headers({
        &amp;#x27;Content-Type&amp;#x27;: &amp;#x27;text/html&amp;#x27;
    })
}).then(function() {
    // g&amp;#xE9;rer la r&amp;#xE9;ponse 
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vous n‚Äôutiliserez probablement que des instances de Request au sein de Service Workers puisque les signatures Request et fetch peuvent √™tre les m√™mes.&lt;/p&gt;

&lt;h2 id=&quot;r√©ponse&quot;&gt;R√©ponse&lt;/h2&gt;

&lt;p&gt;La m√©thode then de fetch est une instance de r√©ponse mais vous pouvez √©galement cr√©er manuellement des objets de r√©ponse vous-m√™me ‚Äì une autre situation que vous pouvez rencontrer lorsque vous utilisez des service workers. Avec une r√©ponse, vous pouvez configurer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;type&lt;/code&gt; - &lt;strong&gt;basic&lt;/strong&gt;, &lt;strong&gt;cors&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;url&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;useFinalURL&lt;/code&gt; - Bool√©en pour si &lt;strong&gt;url&lt;/strong&gt; est l‚ÄôURL finale.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;status&lt;/code&gt; - code de statut (ex: &lt;strong&gt;200&lt;/strong&gt;, &lt;strong&gt;404&lt;/strong&gt;, etc.)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ok&lt;/code&gt; - Bool√©en pour une r√©ponse r√©ussie (statut dans la plage 200-299)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;statusText&lt;/code&gt; - code de statut (ex: &lt;strong&gt;OK&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;headers&lt;/code&gt; - Objet d‚Äôen-t√™te associ√© √† la r√©ponse.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;// Fausse r&amp;#xE9;ponse pour les tests des service workers -- new Response(body, options)
const response = new Response(&amp;#x27;response body&amp;#x27;, {
    ok: false,
    status: 404,
    url: &amp;#x27;/&amp;#x27;
});

// Le then de fetch r&amp;#xE9;cup&amp;#xE8;re alors une instance de r&amp;#xE9;ponse.
fetch(&amp;#x27;https://exemple.com/&amp;#x27;).then(function(response) {
    console.log(&amp;#x27;ok: &amp;#x27;, response.ok); // faux
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La &lt;code&gt;Response&lt;/code&gt; fournit √©galement les m√©thodes suivantes :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;clone() Cr√©e un clone d‚Äôun objet Response&lt;/li&gt;
  &lt;li&gt;error() Retourne un nouvel objet Response associ√© √† une erreur r√©seau&lt;/li&gt;
  &lt;li&gt;redirect() Cr√©e une nouvelle r√©ponse avec une URL diff√©rente.&lt;/li&gt;
  &lt;li&gt;arrayBuffer() Retourne une promesse qui se r√©sout avec un ArrayBuffer.&lt;/li&gt;
  &lt;li&gt;blob() Retourne une promesse qui se r√©sout avec un Blob.&lt;/li&gt;
  &lt;li&gt;formData() Retourne une promesse qui se r√©sout avec un objet FormData.&lt;/li&gt;
  &lt;li&gt;json() Retourne une promesse qui se r√©sout avec un objet JSON.&lt;/li&gt;
  &lt;li&gt;text() Retourne une promesse qui se r√©sout avec une USVString (texte)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;manipulation-du-json&quot;&gt;Manipulation du JSON&lt;/h2&gt;

&lt;p&gt;Disons que vous faites une requ√™te pour JSON, les donn√©es de rappel r√©sultantes ont une m√©thode json pour convertir les donn√©es brutes en objet JavaScript&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;fetch(&amp;#x27;https://exemple.com/api/list.json&amp;#x27;).then(function(response) { 
    // Convertir en JSON
    return response.json();
}).then(function(jsObj) {
    // jsObj est un objet javascript de la r&amp;#xE9;ponse json
    console.log(jsObj); 
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La m√©thode &lt;code&gt;json()&lt;/code&gt; est un simple raccourci vers &lt;code&gt;JSON.parse(jsonString)&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;manipulation-des-r√©ponses-texthtml&quot;&gt;Manipulation des r√©ponses Text/HTML&lt;/h2&gt;

&lt;p&gt;JSON n‚Äôest pas toujours le format de r√©ponse d√©sir√©, alors voici comment vous pouvez travailler avec une r√©ponse HTML ou textuelle&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;fetch(&amp;#x27;/404&amp;#x27;).then(function(response) {
    return response.text();
}).then(function(htmlresponse) { 
    // &amp;#x3C;!DOCTYPE ....
    console.log(htmlresponse); 
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vous pouvez obtenir le texte de r√©ponse encha√Ænant la m√©thode &lt;code&gt;then&lt;/code&gt; de la promesse avec la m√©thode &lt;code&gt;text()&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;manipulation-des-r√©ponses-blob&quot;&gt;Manipulation des r√©ponses Blob&lt;/h2&gt;

&lt;p&gt;Par exemple, charger une image via fetch est un peu diff√©rent&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;fetch(&amp;#x27;https://exemple.com/someimage.jpg&amp;#x27;).then(function(response) {
    return response.blob();
})
.then(function(imageBlob) {
    document.querySelector(&amp;#x27;img&amp;#x27;).src = URL.createObjectURL(imageBlob);
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La m√©thode &lt;code&gt;blob()&lt;/code&gt; du Body mixing prend un flux de r√©ponse et le lit jusqu‚Äô√† la fin.&lt;/p&gt;

&lt;h2 id=&quot;envoyer-des-donn√©es-de-formulaire&quot;&gt;Envoyer des donn√©es de formulaire&lt;/h2&gt;

&lt;p&gt;AJAX est beaucoup utilis√© pour envoyer des donn√©es de formulaire, voici comment vous le feriez avec l‚Äôutilisation de fetch&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;fetch(&amp;#x27;https://exemple.com/submit&amp;#x27;, {
    method: &amp;#x27;post&amp;#x27;,
    body: new FormData(document.getElementById(&amp;#x27;myForm&amp;#x27;))
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et si vous voulez poster des donn√©es JSON&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;fetch(&amp;#x27;https://exemple.com/submit&amp;#x27;, {
    method: &amp;#x27;post&amp;#x27;,
    body: JSON.stringify({
        some: document.querySelector(&amp;#x27;#some&amp;#x27;).value,
        json: document.querySelector(&amp;#x27;#json&amp;#x27;).value,
        data: document.querySelector(&amp;#x27;#data&amp;#x27;).value
    })
});&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;C‚Äôest aussi simple que √ßa !&lt;/p&gt;

&lt;h2 id=&quot;polyfill&quot;&gt;Polyfill&lt;/h2&gt;

&lt;p&gt;Il y a beaucoup de Polyfill pour la m√©thode fetch, mais je vous sugg√®re fortement de vous pencher sur celle de &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  
  
  
  
  <entry>
    <title>Compteur de temps de chargement d'une page en JS</title>
    <link href="https://blog.alexandrecipor.com/fr/page-load-time-counter"/>
    <updated>2018-08-07T00:00:00+02:00</updated>
    <id>https://blog.alexandrecipor.com/fr/page-load-time-counter</id>
    <content type="html">&lt;p&gt;Ce que j‚Äôaimerais voir sur les sites web est un petit compteur du temps de chargement de la page plac√© dans le footer de la page, alors j‚Äôai d√©cid√© de vous partager le petit morceau de code afin d‚Äôint√©grer facilement ce compteur dans le footer sur votre site web.&lt;/p&gt;

&lt;p&gt;Version ES5 (Navigateurs anciens)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;(function () {
    var time = window.performance &amp;#x26;&amp;#x26; performance.timing;
    if (time) {
        var load = (time.loadEventEnd - time.navigationStart) / 1e3;
        alert(&amp;#x22;Cette page a &amp;#xE9;t&amp;#xE9; charg&amp;#xE9;e en &amp;#x22; + load + &amp;#x22; secondes&amp;#x22;);
    }
})();&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ES6 Version (Navigateurs modernes)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;(() =&amp;#x3E; {
    const time = window.performance &amp;#x26;&amp;#x26; performance.timing;
    if (time) {
        const load = (time.loadEventEnd - time.navigationStart) / 1e3;
        alert(&amp;#x60;Cette page a &amp;#xE9;t&amp;#xE9; charg&amp;#xE9;e en ${load} secondes&amp;#x60;)
    }
})();&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  
  
  
  <entry>
    <title>Comment faire un bouton Google avec du CSS</title>
    <link href="https://blog.alexandrecipor.com/fr/how-to-make-a-google-button"/>
    <updated>2018-08-07T00:00:00+02:00</updated>
    <id>https://blog.alexandrecipor.com/fr/how-to-make-a-google-button</id>
    <content type="html">&lt;p&gt;Personnellement, j‚Äôaime le design des boutons google, ils sont simples, l√©gers et modernes √† la fois. J‚Äôai donc d√©cid√© de reproduire moi-m√™me le design des boutons google avec du CSS.&lt;/p&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;

&lt;style&gt;.button{display:inline-block;background-image:-moz-linear-gradient(top,#f5f5f5,#f1f1f1);-moz-border-radius:2px;-moz-user-select:none;background-color:#f2f2f2;color:#757575;width:152px;font-family:arial,sans-serif;font-size:13px;border:1px solid #f2f2f2;border-radius:2px;cursor:default;font-weight:700;text-align:center;line-height:27px;min-width:54px;padding:0 16px;text-decoration:none}.button:hover{background-color:#f8f8f8;background-image:linear-gradient(top,#f8f8f8,#f1f1f1);border:1px solid #c6c6c6;color:#333;box-shadow:0 1px 1px rgba(0,0,0,.1)}.button.default:active{box-shadow:inset 0 1px 2px rgba(0,0,0,.1);color:#000}&lt;/style&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;google button&quot;&gt;Recherche Google&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;google-button-source-code&quot;&gt;Google button Source Code&lt;/h2&gt;

&lt;p&gt;HTML&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&amp;#x3C;a href=&amp;#x22;#&amp;#x22; class=&amp;#x22;google button&amp;#x22;&amp;#x3E;Recherche Google&amp;#x3C;/a&amp;#x3E;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CSS (775 octets non compress√©s)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;.button {
    display: inline-block;
    background-image: -moz-linear-gradient(top, #f5f5f5, #f1f1f1);
    -moz-border-radius: 2px;
    -moz-user-select: none;
    background-color: #f2f2f2;
    color: #757575;
    width: 152px;
    font-family: arial, sans-serif;
    font-size: 13px;
    border: 1px solid #f2f2f2;
    border-radius: 2px;
    cursor: default;
    font-weight: 700;
    text-align: center;
    line-height: 27px;
    min-width: 54px;
    padding: 0 16px;
    text-decoration: none
}
.button:hover {
    background-color: #f8f8f8;
    background-image: linear-gradient(top, #f8f8f8, #f1f1f1);
    border: 1px solid #c6c6c6;
    color: #333;
    box-shadow: 0 1px 1px rgba(0, 0, 0, .1)
}
.button.default:active {
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, .1);
    color: #000
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et c‚Äôest tout !&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <title>R√©parer le clic droit sur les ic√¥nes de la barre des t√¢ches</title>
    <link href="https://blog.alexandrecipor.com/fr/fix-right-click-on-taskbar-icons"/>
    <updated>2018-08-07T00:00:00+02:00</updated>
    <id>https://blog.alexandrecipor.com/fr/fix-right-click-on-taskbar-icons</id>
    <content type="html">&lt;p&gt;Quand j‚Äôutilise Windows 10, je suis parfois confront√© au probl√®me que je ne peux pas faire un clic droit sur mes ic√¥nes de la barre des t√¢ches, mais j‚Äôai trouv√© quelques solutions pour r√©soudre cela.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NB: Cela fonctionne √©galement sur Windows 7 et 8.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution-1--utilisation-de-maj--clic-droit&quot;&gt;Solution 1 : Utilisation de Maj + clic droit&lt;/h2&gt;

&lt;p&gt;Tout ce que vous avez √† faire est de maintenir la touche &lt;strong&gt;Maj&lt;/strong&gt; tout en faisant un clic droit sur n‚Äôimporte quelle ic√¥ne de votre barre des t√¢ches et apr√®s cela, vous pourrez faire un clic droit normalement sur les ic√¥nes de votre barre des t√¢ches.
Mais gardez √† l‚Äôesprit que m√™me si cette m√©thode fonctionne, elle devrait √™tre consid√©r√©e comme une solution de contournement plut√¥t qu‚Äôun correctif.&lt;/p&gt;

&lt;h2 id=&quot;solution-2--red√©marrer-lexplorateur-windows&quot;&gt;Solution 2 : Red√©marrer l‚ÄôExplorateur Windows&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Appuyez sur &lt;strong&gt;Ctrl + Maj + Esc&lt;/strong&gt; pour ouvrir le &lt;strong&gt;Gestionnaire de t√¢ches&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Dans le &lt;strong&gt;Gestionnaire de t√¢ches&lt;/strong&gt;, localisez le processus &lt;strong&gt;Windows Explorer&lt;/strong&gt;, &lt;strong&gt;cliquez avec le bouton droit&lt;/strong&gt; dessus et choisissez &lt;strong&gt;Red√©marrer&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/fix-right-click-on-taskbar-icons-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Voyez maintenant si le correctif a √©t√© efficace en cliquant avec le bouton droit de la souris sur un ic√¥ne dans la barre des t√¢ches.&lt;/p&gt;

&lt;h2 id=&quot;solution-3--red√©marrage-du-service-serveur-de-mod√®le-de-donn√©es&quot;&gt;Solution 3 : Red√©marrage du service Serveur de mod√®le de donn√©es&lt;/h2&gt;

&lt;p&gt;1.
Appuyez sur la touche &lt;strong&gt;Windows + R&lt;/strong&gt; pour ouvrir la fen√™tre ex√©cuter. Ensuite, tapez ‚Äú&lt;strong&gt;services.msc&lt;/strong&gt;‚Äù et appuyez sur &lt;strong&gt;Entr√©e&lt;/strong&gt; pour ouvrir la fen√™tre Services.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/fix-right-click-on-taskbar-icons-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2.
Dans la fen√™tre &lt;strong&gt;Services&lt;/strong&gt;, faites d√©filer la liste &lt;strong&gt;Services locaux&lt;/strong&gt; et localisez &lt;strong&gt;Serveur de mod√®le de donn√©es&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;3.
Cliquez avec le bouton droit de la souris sur &lt;strong&gt;Serveur de mod√®le de donn√©es&lt;/strong&gt; et choisissez &lt;strong&gt;Red√©marrer&lt;/strong&gt;, puis attendez que le service soit red√©marr√©.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/fix-right-click-on-taskbar-icons-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4.
Cliquez avec le bouton droit de la souris sur n‚Äôimporte quoi dans votre barre des t√¢ches pour voir si la solution a √©t√© efficace.&lt;/p&gt;
</content>
  </entry>
  
  
  
  <entry>
    <title>Cr√©er des gists en ligne de commande</title>
    <link href="https://blog.alexandrecipor.com/fr/create-gist-from-cli"/>
    <updated>2018-08-07T00:00:00+02:00</updated>
    <id>https://blog.alexandrecipor.com/fr/create-gist-from-cli</id>
    <content type="html">&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;1.
Installer le paquet npm &lt;code&gt;pretty-diff&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;npm install -g pretty-diff&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.
Ajoutez votre nom d‚Äôutilisateur github dans la configuration globale de git&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;git config --global github.user &amp;#x22;VotreNomDutilisateurGitHubIci&amp;#x22;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.
Cr√©ez un &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;jeton d‚Äôacc√®s personnel&lt;/a&gt; (n‚Äôoubliez pas de cocher la case ‚ÄúCr√©er un gist‚Äù) afin de faire fonctionner &lt;code&gt;pretty-diff&lt;/code&gt;. Une fois que vous avez cr√©√© le jeton, ex√©cutez cette commande&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;git config --global gist-diff.token &amp;#x22;VotreTokenPersonnelIci&amp;#x22;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vous √™tes maintenant pr√™t √† utiliser &lt;code&gt;gist-diff&lt;/code&gt;!&lt;/p&gt;

&lt;h2 id=&quot;cr√©er-un-gist&quot;&gt;Cr√©er un Gist&lt;/h2&gt;

&lt;p&gt;Maintenant vous pouvez simplement ex√©cuter la commande &lt;code&gt;gist-diff&lt;/code&gt; afin de cr√©er un gist avec le contenu de &lt;code&gt;git diff&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;gist-diff&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lorsque &lt;code&gt;gist-diff&lt;/code&gt; a cr√©√© le gist, il ouvrira l‚ÄôURL du gist dans votre navigateur&lt;/p&gt;
</content>
  </entry>
  
  
  
  
  
  
</feed>